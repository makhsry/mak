##############################################################################
##############################################################################
Subdirectories: 
- /inp/:	contains the imput files, specificly the CFG file of unit cell, 
			there is no need to provide the POSCAR file initial unit cell 
			here as it could be generated by convert command 
			CIF file can be stored as a reference 
- 	/sh/:	contains all bash scripts for the 
			--- on the fly active learning ---
		bash scripts: 
			cfg2poscar.sh:	generates POSCAR files from CFG genrated 
							in the course of MD runs in LAMMPS
			checkfail.sh:	checks whether the LAMMPS MD runs are failed 
							or not
							the old version looks for last dump file 
							based on the simulation length
							the current version looks for presence 
							of -selected.cfg- files 
			cout.sh:		counts number of POSCAR files for which 
							the vasp EF needs to be run to find energy 
							and forces for these extrapolated configurations
							it is a typo, it was named -count.sh-
			genMVS.sh:		generates state.MVS file 
			lmprun.sh: 		sumbits or excutes 32 instance of LAMMPS 
							to check MTP potential
							it is a slave script called inside -lmpS2.sh-
			lmpS2.sh: 		launchs M LAMMPS instances by 
							repetitive calling of lmprun.sh
							for M, see file M under usr directory
							controls and monitors progress of each lammps intsance 
			MAIN.sh: 		the main script from which all executations 
							started and being controled 
			Mod.sh:			generates POSCAR files 
							ONLY in case of learning by neighbourhood
			on62.sh: 		migirates executations to 62 server to 
							launch, monitor, manage and return the vasp related runs
			outcar2cfg.sh:	generates CFG files for respective vasp OUTCAR file 
			sampling: 		checks if the extrapollated configgurations in 
							-selected.cfg- is already included in trainset or not
							it decteds the --- out-of-sample configurations --- 
			training:		executes the training of MTP potential for the new trainset
			vaspEFmulti.sh: executes vasp EF runs if more than one 
							out-of-sample configurations are obtained 
			vaspEFsingle.sh
			vasprun.sh: 	executes VASP runs
	/src/:	contains all basic source files that are in common for all calculations and 
			arranged in subdirectories  		
		subdirectories: 
			/lmp/:	contains LAMMPS input scripts: 
					in.ExtSys	- used for assessment of extented systems 
								- it uses read commands to read cfgs
								- it has a corresponding .ini file under mlip directory -
					in.genMTP	- for pure MTP generation meaning that it starts with a vasp MD
								- a portion of configurations from OUTCAR are collected as trainset 
					in.Neigh1
					in.Neigh2	- used for learning by neighbourhood 
								- each has a corresponding .ini file under mlip directory
								- in.Neigh1 is to start simulations and generates the initial trainset
					lmp_mpi
					lmp_serial	- LAMMPS binaries - should be replaced by latest 
			/mlip/:	contains MLIP ini files: 
					ExtSys.ini 	- corresponding setting for in.ExtSys
					genMTP.ini 	- corresponding setting for in.genMTP 
					Neigh1.ini 	- corresponding setting for in.Neigh1 
					Neigh2.ini 	- corresponding setting for in.Neigh2
					NeighDiff1.ini 	- corresponding setting for selection in case of in.Neigh1 
					NeighDiff2.ini 	- corresponding setting for selection in case of in.Neigh2
					NeighMVS.ini 	- corresponding setting for state.MVS file generation 
					mlp			- MLIP binary 
					mlp_A 		- MLIP binary: provided by Alex for selection process only
												to generate more efficient cfg file 
			/vaspEF/
			/vaspMD/:	both contain INCAR and POTCAR files 
						the difference is the INCAR file content only 
	/tmp/: 	contains temporarly or intitial potential, states and trainset files 
			also all temporary files generated in the course of simulations and runs
			will be moved to this directory 
	/usr/: contains user settings for customization 
			DEBUG:		content can be -0- or -1- 
						-0- no user interaction requested
						-1- user input is requested to proceed to the next step 
			M: 			total number of LAMMPS instances 
			MAINPATH:	path to parent directory of running scripts
						Ex.: home/mkhansary/unified
			MODE: 		determines the executation mode 
						0 for genMTP
						1 for ExtSys
						2 for Neigh
			SCRATCHPATH:	directory in scratch to move files from MAINPATH
							to avoid exhasting the home directory 
			TERMINATED:	indicates that it is a terminated run or new
						1 for terminated
						0 for new
						if 1, then it always starts with LAMMPS 
			TERMINATION:	indicates how many training cycles should be done, 
							if exceeds, the executation will be terminated 
README 	this file :)
##############################################################################
##############################################################################
Workflow: 
	- set settings by modifying content of /usr/ 
		- put all aforementioed directories under directory MAINPATH_Dir
		- set the path to MAINPATH_Dir in /usr/MAINPATH
		- put the intial CFG and POSCAR files under /inp/ or modify 
	- in case of a TERMINATED run 
		- put MTP, MVS and CFG files in /tmp/ directory
	- go to /sh/ directory and execute MAIN.sh 
		- possible modification: 
			- servers address if different 
			- sleep command and value can be changed BUT better not be removed 
	**** MAIN.sh will make a directory --- runs --- under MAINPATH_Dir
				directory /MAINPATH_Dir/runs/ will have numbered directories for each cycle 
				like /MAINPATH_Dir/runs/cycle 
					directories /MAINPATH_Dir/runs/cycle could have following subdirectories
						/vaspEF/
						/vaspEF_Pre/
						/mlip/
						/lmpRX/ 
	**** these subdirectories will contain all the associated files 
##############################################################################
##############################################################################