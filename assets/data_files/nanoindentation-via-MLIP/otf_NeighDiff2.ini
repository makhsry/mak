mlip								mtpr             # <string>    MLIP type: "MTP" or "MTPR" or "void"
    # MTP - linearly parametrized MTP           #             Moment Tensor Potential is used
    # MTPR - non-linearly parametrized multicomponent MTP #   Moment Tensor Potential "Radial" is used
    # void - no machine learning potential      #             Used when driver should use ab initio potential and no MLIP features are required
    mlip:load-from					curr.mtp         # <string>    Filename with MTP. If not specified driver operates directly with Ab-Initio model (without additional routines)
select								TRUE            # <bool>      Activates/deactivates selection (active learning engine)
    select:site-en-weight			1.0             # <double>    Weight for site energy equations in selection procedure
    select:energy-weight			0.0             # <double>    Weight for energy equation in selection procedure
    select:force-weight				0.0             # <double>    Weight for forces equations in selection procedure
    select:stress-weight			0.0             # <double>    Weight for stresses equations in selection procedure
    select:weight-scaling			2				# <string>	  Indicates how the weights for energy and for stress are scaled with the number of atoms. The corresponded weight is divided by the number of atoms in the power (select:weight-scaling / 2)
    select:threshold-init			0.000001        # <double>    Parameter for initiating selecting process (should be >0 but small)
    select:threshold				1.1             # <double>    Selection threshold - maximum allowed extrapolation level (should be >=1)
    select:threshold-swap			1.000001        # <double>    Treshold for the following swaps if selection threshold is reached (should be >=1)
    select:threshold-break			0              # <double>    Break the program if this threshold exceeded. Activated if >1.0. If activated updates of selected set are restricted
#    select:save-selected			selected.cfg         # <string>    Selected configurations will be saved in this file after selection is complete. No configuration saving if not specified
#    select:save-state				new_state.mvs   # <string>    The state of the selection will be saved in this file after selection is complete. No saving if not specified. Can be used for further continue selection/learning on the fly
    select:load-state				state.mvs   # <string>    The state of the selection will be loaded from this file before selection starts. No saving if not specified. Used to continue selection/learning on the fly
    select:efs-ignored				FALSE            # <bool>      Indicates that driver actually does not need EFS to be calculated (e.g. in fitting scenario). "TRUE" value may speed up processing by skipping some extra EFS calculations 
    select:multiple				TRUE			# <bool>      Switches to multiple selection mode if true. In this case configurations are added for selection whereas selection is done only once in the end of program execution (or when the configuration count commited for selection reaches 'select:multiple:by-count' count). It requires storing of the all processed configuration and related data that can cause memory limitation issues. Multiple selection mode is incompatible with learning on the fly. If false the selected set is updated after processing of each configuration. 
    select:multiple:by-count			0				# <int>		  In multiple selection mode configurations are commited for selection until the number of commited configurations reaches this number. After that, selection between all collected configurations is performed. Unlimited if 0 is set
    select:swap-limit				0				# <int>		  Maximal allowed number of swaps while selection. Unlimited if 0
    select:treat-locals				FALSE			# <bool>	  When selecting by forces or site energies the selected local environments are extracted, stored and handled as new configurations after being selected. Otherwise the original configurations are stored and handled
    select:log					selection.log   # <string>    Where to write selection log. No logging if not specified; if "stdout" and "stderr" corresponds to standard output streams; otherwise log will be outputed to file with that name
